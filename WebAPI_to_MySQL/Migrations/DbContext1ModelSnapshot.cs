// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebAPI_to_MySQL.Migrations
{
    [DbContext(typeof(DbContext1))]
    partial class DbContext1ModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PaymentAttempt", b =>
                {
                    b.Property<int>("PaymentAttemptID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PaymentAttemptID"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("AttemptedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FailureReason")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PaymentId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RawResponse")
                        .HasColumnType("longtext");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PaymentAttemptID");

                    b.HasIndex("UserID");

                    b.ToTable("payment_attempt", (string)null);
                });

            modelBuilder.Entity("Subscription", b =>
                {
                    b.Property<int>("SubscriptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SubscriptionID"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastPaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PaymentStatusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionID");

                    b.HasIndex("PaymentStatusID");

                    b.HasIndex("UserID");

                    b.ToTable("subscription", (string)null);
                });

            modelBuilder.Entity("WebAPI_to_MySQL.Entities.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryDesc")
                        .HasColumnType("longtext");

                    b.HasKey("CategoryID");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("WebAPI_to_MySQL.Entities.Criterion", b =>
                {
                    b.Property<int>("CriterionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CriterionID"));

                    b.Property<string>("CriterionDesc")
                        .HasColumnType("longtext");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("Regarding")
                        .HasColumnType("longtext");

                    b.HasKey("CriterionID");

                    b.HasIndex("ProjectID");

                    b.ToTable("criterion", (string)null);
                });

            modelBuilder.Entity("WebAPI_to_MySQL.Entities.PaymentStatus", b =>
                {
                    b.Property<int>("PaymentStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PaymentStatusID"));

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("longtext");

                    b.HasKey("PaymentStatusID");

                    b.ToTable("payment_status", (string)null);
                });

            modelBuilder.Entity("WebAPI_to_MySQL.Entities.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProjectID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("ProjectDesc")
                        .HasColumnType("longtext");

                    b.Property<string>("Prompt")
                        .HasColumnType("longtext");

                    b.HasKey("ProjectID");

                    b.HasIndex("CategoryID");

                    b.ToTable("project", (string)null);
                });

            modelBuilder.Entity("WebAPI_to_MySQL.Entities.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RoleID");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("WebAPI_to_MySQL.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Auth0UserID")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("PaymentAttempt", b =>
                {
                    b.HasOne("WebAPI_to_MySQL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Subscription", b =>
                {
                    b.HasOne("WebAPI_to_MySQL.Entities.PaymentStatus", "PaymentStatus")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PaymentStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI_to_MySQL.Entities.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI_to_MySQL.Entities.Criterion", b =>
                {
                    b.HasOne("WebAPI_to_MySQL.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WebAPI_to_MySQL.Entities.Project", b =>
                {
                    b.HasOne("WebAPI_to_MySQL.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebAPI_to_MySQL.Entities.User", b =>
                {
                    b.HasOne("WebAPI_to_MySQL.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebAPI_to_MySQL.Entities.PaymentStatus", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("WebAPI_to_MySQL.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebAPI_to_MySQL.Entities.User", b =>
                {
                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
